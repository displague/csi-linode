---
# pkg/linode-bs/deploy/kubernetes/06-ss-csi-linode-controller.yaml
kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: csi-linode-controller
  namespace: kube-system
spec:
  serviceName: "csi-linode"
  replicas: 1
  selector:
    matchLabels:
      app: csi-linode-controller
  template:
    metadata:
      labels:
        app: csi-linode-controller
        role: csi-linode
    spec:
      serviceAccount: csi-controller-sa
      containers:
      - name: csi-provisioner
        image: quay.io/k8scsi/csi-provisioner:v1.0.0
        args:
        - "--volume-name-prefix=pvc"
        - "--volume-name-uuid-length=16"
        - "--csi-address=$(ADDRESS)"
        - "--v=5"
        env:
        - name: ADDRESS
          value: /var/lib/csi/sockets/pluginproxy/csi.sock
        imagePullPolicy: "Always"
        volumeMounts:
        - name: socket-dir
          mountPath: /var/lib/csi/sockets/pluginproxy/
      - name: csi-attacher
        image: quay.io/k8scsi/csi-attacher:v1.0.0
        args:
        - "--v=5"
        - "--csi-address=$(ADDRESS)"
        env:
        - name: ADDRESS
          value: /var/lib/csi/sockets/pluginproxy/csi.sock
        imagePullPolicy: "Always"
        volumeMounts:
        - name: socket-dir
          mountPath: /var/lib/csi/sockets/pluginproxy/
      - name: linode-csi-plugin
        image: {{ .Image }}
        args :
        - "--endpoint=$(CSI_ENDPOINT)"
        - "--token=$(LINODE_TOKEN)"
        - "--url=$(LINODE_API_URL)"
        - "--node=$(NODE_NAME)"
        - "--bs-prefix=$(LINODE_BS_PREFIX)"
        - "--v=10"
        env:
        - name: CSI_ENDPOINT
          value: unix:///var/lib/csi/sockets/pluginproxy/csi.sock
        - name: LINODE_API_URL
          value: https://api.linode.com/v4
        - name: LINODE_BS_PREFIX
          value:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: LINODE_TOKEN
          valueFrom:
            secretKeyRef:
              name: linode
              key: token
        imagePullPolicy: "Always"
        volumeMounts:
        - name: socket-dir
          mountPath: /var/lib/csi/sockets/pluginproxy/
      volumes:
      - name: socket-dir
        emptyDir: {}

---
# pkg/linode-bs/deploy/kubernetes/07-ds-csi-linode-node.yaml
kind: DaemonSet
apiVersion: extensions/v1beta1
metadata:
  name: csi-linode-node
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app: csi-linode-node
  template:
    metadata:
      labels:
        app: csi-linode-node
        role: csi-linode
    spec:
      serviceAccount: csi-node-sa
      hostNetwork: true
      containers:
      - name: driver-registrar
        image: quay.io/k8scsi/driver-registrar:v1.0-canary
        args:
        - "--v=5"
        - "--csi-address=$(ADDRESS)"
        - "--mode=node-register"
        - "--driver-requires-attachment=true"
        - "--pod-info-mount-version=\"v1\""
        - "--kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)"
        env:
        - name: ADDRESS
          value: /csi/csi.sock
        - name: DRIVER_REG_SOCK_PATH
          value: /var/lib/kubelet/plugins/linodebs.csi.linode.com/csi.sock
        - name: KUBE_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        volumeMounts:
        - name: plugin-dir
          mountPath: /csi/
        - name: registration-dir
          mountPath: /registration/
      - name: csi-linode-plugin
        image: {{ .Image }}
        args :
        - "--endpoint=$(CSI_ENDPOINT)"
        - "--token=$(LINODE_TOKEN)"
        - "--url=$(LINODE_API_URL)"
        - "--node=$(NODE_NAME)"
        - "--v=10"
        env:
        - name: CSI_ENDPOINT
          value: unix:///csi/csi.sock
        - name: LINODE_API_URL
          value: https://api.linode.com/v4
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: LINODE_TOKEN
          valueFrom:
            secretKeyRef:
              name: linode
              key: token
        imagePullPolicy: "Always"
        securityContext:
          privileged: true
          capabilities:
            add: ["SYS_ADMIN"]
          allowPrivilegeEscalation: true
        volumeMounts:
        - name: plugin-dir
          mountPath: /csi
        - name: pods-mount-dir
          mountPath: /var/lib/kubelet
          # needed so that any mounts setup inside this container are
          # propagated back to the host machine.
          mountPropagation: "Bidirectional"
        - mountPath: /dev
          name: device-dir
      volumes:
      - name: registration-dir
        hostPath:
          path: /var/lib/kubelet/plugins_registry/
          type: DirectoryOrCreate
      - name: kubelet-dir
        hostPath:
          path: /var/lib/kubelet
          type: Directory
      - name: plugin-dir
        hostPath:
          path: /var/lib/kubelet/plugins/linodebs.csi.linode.com
          type: DirectoryOrCreate
      - name: pods-mount-dir
        hostPath:
          path: /var/lib/kubelet
          type: Directory
      - name: device-dir
        hostPath:
          path: /dev
      # The following mounts are required to trigger host udevadm from container
      - name: udev-rules-etc
        hostPath:
          path: /etc/udev
          type: Directory
      - name: udev-rules-lib
        hostPath:
          path: /lib/udev
          type: Directory
      - name: udev-socket
        hostPath:
          path: /run/udev
          type: Directory
      - name: sys
        hostPath:
          path: /sys
          type: Directory

---